<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd ">
	
	 <context:property-placeholder location="classpath:conn-jdbc.properties"/>
	 
	 <context:component-scan base-package="com.it.show.." />
	 
	<!--  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	 	<property name="jdbcUrl" value="${jdbcUrl}" />
	 	<property name="user" value="${user}" />
	 	<property name="password" value="${password}" />
	 	<property name="driverClass" value="${driverClass}" />
	 </bean>
	 
	 <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource" />
	 </bean>
	 
	 <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	 	 创建事务管理器, 管理sessionFactory(因为所有的session都是从sessionFactory获取的)
	 	<property name="sessionFactory" ref="sessionFactory" />
	 </bean>
	 配置通知, 那些方法需要切入什么类型的事务	 
	 <tx:advice id="advice" transaction-manager="transactionManager">
	 	<tx:attributes>
	 		<tx:method name="save*" propagation="REQUIRED"/>
	 		<tx:method name="update*" propagation="REQUIRED"/>
	 		<tx:method name="delete*" propagation="REQUIRED"/>
	 		<tx:method name="*" propagation="SUPPORTS" read-only="true"/>
	 	</tx:attributes>
	 </tx:advice>
	 
	 配置切面表达式, 并且让 tx与切面表达式合二为一
	 <aop:config>
	 	表达式, 定义哪个包的哪些类需要切入事务,但是此处并且没有制定类中哪些方法,需要切入什么样 事务
	 	<aop:pointcut expression="execution(* com.it.show.service.impl.*.*(..))" id="pointcut" />
	 	<aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
	 </aop:config>
	 获取properties配置文件的工具类,此方式获取仅仅支持注解注入,不支持xml
	 <bean id="public" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	 	<property name="locations">
	 		<array>
	 			<value>classpath:public.properties</value>
	 		</array>
	 	</property>
	 </bean> -->
	 
	 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >  
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>  
        <property name="url" value="jdbc:mysql://localhost:3306/ssh"></property>  
        <property name="username" value="root"></property>  
        <property name="password" value="root"></property>  
    </bean> 
	
	<!-- 配置SessionFactory -->  
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.format_sql">true</prop>  
            </props>  
        </property>  
        <property name="annotatedClasses">  
            <list>  
                <value>com.it.show.model.Advert</value>  
                <value>com.it.show.model.Category</value>
                <value>com.it.show.model.Discuss</value>
                <value>com.it.show.model.Exhibitions</value>
                <value>com.it.show.model.Keywords</value>
                <value>com.it.show.model.List</value>
                <value>com.it.show.model.News</value>
                <value>com.it.show.model.Post</value>
                <value>com.it.show.model.Repost</value>
                <value>com.it.show.model.User</value>
                <value>com.it.show.model.Zan</value>             
            </list>  
        </property>  
    </bean>  
      
    <!-- 配置一个事务管理器 -->  
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"/>  
    </bean>  
      
    <!-- 配置事务，使用代理的方式 -->  
    <bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">    
        <property name="transactionManager" ref="transactionManager"></property>    
        <property name="transactionAttributes">    
            <props>    
                <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>    
                <prop key="modify*">PROPAGATION_REQUIRED,-myException</prop>    
                <prop key="del*">PROPAGATION_REQUIRED</prop>    
                <prop key="*">PROPAGATION_REQUIRED</prop>    
            </props>    
        </property>    
    </bean>   
	 
</beans>